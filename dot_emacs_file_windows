
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages (quote (ahungry-theme company)))
 '(show-paren-mode t)
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "幼圆" :foundry "outline" :slant normal :weight normal :height 120 :width normal)))))


;; personal config

;; ==============================company-mode=============================
(semantic-mode 1) ;; automatically open semantic mode for company mode
;; the following line will open company mode when you open your emacs, usually we don't want to use company mode while we are not programming, because this will cause a lot trouble.
;; (add-hook 'after-init-hook 'global-company-mode)
;; this line tell emacs to open company mode when enter c/c++ mode
(add-hook 'c-mode-common-hook 'company-mode)
;; the following two lines will make company mode response faster
(setq company-dabbrev-downcase 0)
(setq company-idle-delay 0) ;; some one says this line will waste your cpu a lot, so be cautious with it
;; I haven't used the folloing function, just for documentation
(defun tab-indent-or-complete ()
  (interactive)
  (if (minibufferp)
      (minibuffer-complete)
    (if (or (not yas-minor-mode)
            (null (do-yas-expand)))
        (if (check-expansion)
            (company-complete-common)
          (indent-for-tab-command)))))

(global-set-key [backtab] 'tab-indent-or-complete)
;; ==========================end of company mode=============================


;; =============================c/c++ style==================================
;; c/c++ style
(add-hook 'c-mode-common-hook (lambda() (c-set-style "bsd")))
(add-hook 'c++-mode-common-hook (lambda() (c-set-style "bsd")))
;; =========================end of c/c++ style===============================


;; ========================close auto backup=================================
;; close auto backup
(setq make-backup-files nil)
;; =====================end of close auto backup=============================


;; ==========================parenthesis related=============================
;; parenthesis
(show-paren-mode t) ;; this will highlight the matching parentheis when your cursor is on a parenthesis.
(electric-pair-mode t) ;; this will automatically generate the right half parenthesis when you write the left half. This mode have other behavors, discover them.

;; the following fucntion will show the content of the line which the matching parenthesis belonged to when the parenthesis is not in current screen. The function works, but will cause an error. I don't know elisps, so I can't figure out why.
(defadvice show-paren-function
    (after show-matching-paren-offscreen activate)
  (interactive)
  (let* ((cb (char-before (point)))
	 (matching-text (and cb
			     (char-equal (char-syntax cb) ?\) )
			     (blink-matching-open))))
    (when matching-text (message matching-text))))
;; ===================end of parenthesis related============================

;; =======================hs-mode===========================================
;; automatically open hs-minor-mode when editing a c/c++ source code
(add-hook 'c-mode-common-hook 'hs-minor-mode)
;; ========================end of hs-mode===================================

;; ============================color-theme==================================
;; these code are added under the instruction of ahungry theme official websites
(add-to-list 'custom-theme-load-path "~/.emacs.d/elpa/ahungry-theme-1.3.0/")
;; uncomment the following line if you want to use your own font setting
;; (setq ahungry-theme-font-settings nil)
(load-theme 'ahungry t)
;; ========================end of color-theme===============================
